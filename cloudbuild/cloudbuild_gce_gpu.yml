# 変数値の置換
substitutions:
  _IMAGE_NAME: api-sample-image                 # docker image 名
  _CLUSTER_NAME: cloud-build-gpu-cluster        # 作成する GKE クラスタ名
  _POD_NAME: cloud-build-gpu-pod                # ポッド名
  _SERVICE_NAME: cloud-build-gpu-service        # サービス名
  _REGION: asia-northeast1-a                    # GKE クラスタを作成するリージョン
  _NUM_NODE: "3"                                # クラスタのノード数
  _DEPLOYMENT_FILE_PATH: ./k8s/deployment_gpu.yml   # Pod のデプロイメント定義ファイルのパス
  _SERVICE_FILE_PATH: ./k8s/service_gpu.yml         # サービス定義ファイルのパス
  _PORT: "80"                                       # 公開ポート番号

# name タグ : コマンドを実行するコンテナイメージ
# entrypoint タグ : name で指定したコンテナイメージのデフォルトのエントリーポイント（dockerコンテナなら docker コマンドなど）を使用しない場合に指定
steps:
  # キャッシュされたイメージを Container Registry から pull
  # 初めてイメージをビルドする際は docker pull で pull できる既存のイメージがないため、entrypoint を bash に設定し、コマンドの実行で返されるエラーを無視できるようにしている
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest || exit 0']

# Container Registry 上で docker image 作成
  - name: 'gcr.io/cloud-builders/docker'
    id: docker build
    args: [
      'build', 
      '-t', 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest', 
      '--cache-from', 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest',
      './api'
    ]

  # Container Registry 上で docker image を登録
  - name: 'gcr.io/cloud-builders/docker'
    id: docker push
    args: ['push', 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest']

  # docker image に SHORT_SHA タグを付与
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Add tag to image
    args:
    - 'container'
    - 'images'
    - 'add-tag'
    - 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest'
    - 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${SHORT_SHA}'

  # GKE クラスタ作成
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: make gke cluster
    entrypoint: gcloud
    args: [
      'container', 'clusters', 'create', '${_CLUSTER_NAME}', 
      '--project', '${PROJECT_ID}', 
      '--zone', '${_REGION}',
      '--num-nodes', '${_NUM_NODE}', 
      '--machine-type', 'n1-standard-1',
      '--preemptible'
    ]

  # クラスタの認証情報を取得。作成したクラスタを使用するように kubectl が構成される
  - name: 'gcr.io/cloud-builders/gcloud'
    id: gcloud container clusters get-credentials
    args: [ 
      'container', 'clusters', 'get-credentials', '${_CLUSTER_NAME}', 
      '--project', '${PROJECT_ID}',
      '--zone', '${_REGION}', 
    ]

  # GKE の Pod と Deployment を作成する
  # env を設定しないと、「No cluster is set. To set the cluster (and the region/zone where it is found), set the environment variables」のエラーが発生する。
  - name: 'gcr.io/cloud-builders/kubectl'
    id: make pod and deployment
    args: [ 'apply', '-f', '${_DEPLOYMENT_FILE_PATH}' ]
    env:
      - "CLOUDSDK_COMPUTE_REGION=${_REGION}"
      - "CLOUDSDK_COMPUTE_ZONE=${_REGION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}"

  # GKE のサービスを公開する
  - name: 'gcr.io/cloud-builders/kubectl'
    id: make service
    args: [ 
      'expose', 'deployment', '${_SERVICE_NAME}', 
      '--type', 'LoadBalancer', 
      '--port', '${_PORT}', '--target-port', '${_PORT}'
    ]
    env:
      - "CLOUDSDK_COMPUTE_REGION=${_REGION}"
      - "CLOUDSDK_COMPUTE_ZONE=${_REGION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}"

# ビルド完了後の docker image を Container Registry に保管
images: ['gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:latest']
