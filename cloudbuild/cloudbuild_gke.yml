# 変数値の置換
substitutions:
  _IMAGE_NAME: api-sample-image                 # docker image 名
  _CLUSTER_NAME: cloud-build-cluster            # 作成する GKE クラスタ名
  _POD_NAME: cloud-build-pod                    # ポッド名
  _REGION: us-central1                          # cloud run を作成するリージョン
  _NUM_NODE: "3"                                # クラスタのノード数
  _DEPLOYMENT_FILE_PATH: ./k8s/deployment.yml   # Pod のデプロイメント定義ファイルのパス
  _SERVICE_FILE_PATH: ./k8s/service.yml         # サービス定義ファイルのパス
  _PORT: "8080"                                 # 公開ポート番号

# name タグ : コマンドを実行するコンテナイメージ
# entrypoint タグ : name で指定したコンテナイメージのデフォルトのエントリーポイント（dockerコンテナなら docker コマンドなど）を使用しない場合に指定
steps:
  # キャッシュされたイメージを Container Registry から pull
  # 初めてイメージをビルドする際は docker pull で pull できる既存のイメージがないため、entrypoint を bash に設定し、コマンドの実行で返されるエラーを無視できるようにしている
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA} || exit 0']

# Container Registry 上で docker image 作成
  - name: 'gcr.io/cloud-builders/docker'  # Docker を実行するコンテナイメージ
    id: docker build
    args: [
      'build', 
      '-t', 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}', 
      '--cache-from', 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}',
      './api'
    ]

  # Container Registry 上で docker image を登録
  - name: 'gcr.io/cloud-builders/docker'
    id: docker push
    args: ['push', 'gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}']

  # GKE クラスタ作成
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: make gke cluster
    entrypoint: gcloud
    args: [
      'container', 'clusters', 'create', '${_CLUSTER_NAME}', 
      '--project', '${PROJECT_ID}', 
      '--num-nodes', '${_NUM_NODE}', 
      '--zone', '${_REGION}'
    ]

  # GKE の Pod と Deployment を作成する
  - name: 'gcr.io/cloud-builders/kubectl'
    id: make pod and deployment
    args: [ 'apply', '-f', '${_DEPLOYMENT_FILE_PATH}' ]

  # GKE のサービスを公開する
  - name: 'gcr.io/cloud-builders/kubectl'
    id: make service
    args: [ 
      'expose', 'deployment', '${_POD_NAME}', 
      '--type', 'LoadBalancer', 
      '--port', '${_PORT}', '--target-port', '${_PORT}'
    ]

# ビルド完了後の docker image を Container Registry に保管
images: ['gcr.io/${PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}']
